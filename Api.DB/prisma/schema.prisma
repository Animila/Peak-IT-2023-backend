generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  login String
  password String
  first_name String
  last_name String
  birthday DateTime
  country String
  email String?
  tel String?
  sessions Session[]
}

model Session {
  id           Int      @id @default(autoincrement())
  accessToken  String   @unique
  refreshToken String   @unique
  expires      DateTime
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
}

model Event {
  id        Int      @id @default(autoincrement())
  name      String
  location  String
  count     Int
  date      DateTime
  // Add other event-specific fields here
  schedules Schedule[]
  broadcasts Broadcast[]
}

model Schedule {
  id      Int     @id @default(autoincrement())
  eventId Int
  event   Event   @relation(fields: [eventId], references: [id])
  date    DateTime
  // Add other schedule-specific fields here
}

model Broadcast {
  id        Int      @id @default(autoincrement())
  eventId   Int
  event     Event   @relation(fields: [eventId], references: [id])
  videoUrl  String   // You can adjust the type as needed
  // Add other broadcast-specific fields here
}

